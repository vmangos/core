name: Windows Development Release

on:
  push:
    branches:
      - development
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/ISSUE_TEMPLATE.md'
      - '.github/PULL_REQUEST_TEMPLATE.md'
      - '.github/workflows/db_check.yml'
      - '.github/workflows/db_dump.yml'
      - 'sql/**'
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - 'CONTRIBUTING.md'

jobs:
  build:
    runs-on: windows-2019

    steps:
    #git checkout
    - uses: actions/checkout@v4

    - name: windows dependencies
      #Sets versions for TBB
      env:
        TBB_VERSION: 2020.3

      run: |
        # Setup TBB
        export TBB_ROOT_DIR=$GITHUB_WORKSPACE/tbb
        curl -LOJ https://github.com/oneapi-src/oneTBB/releases/download/v$TBB_VERSION/tbb-$TBB_VERSION-win.zip
        unzip tbb-$TBB_VERSION-win.zip
        rm tbb-$TBB_VERSION-win.zip
      #git bash shell
      shell: bash

    #build and install
    - name: windows build & install
      run: |
        # Setup TBB
        mkdir build
        cd build
        cmake -D TBB_ROOT_DIR=$GITHUB_WORKSPACE/tbb -DWITH_WARNINGS=0 -DBUILD_FOR_HOST_CPU=0 -DUSE_EXTRACTORS=1 -G "Visual Studio 16 2019" -A x64 ..
        /c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe "MaNGOS.sln" //p:Platform=x64 //p:Configuration=Release //m:2
      #git bash shell
      shell: bash
    - name: Create Upload File Name
      run: |
          echo "ARCHIVE_FILENAME=${{ github.event.repository.name }}-$(git rev-parse --short HEAD).zip" >> $env:GITHUB_ENV
    - name: Archive files
      run: |
          #data is in Release folder
          cd ${{github.workspace}}/bin
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb.dll ${{github.workspace}}/bin/Release/tbb.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb_debug.dll ${{github.workspace}}/bin/Release/tbb_debug.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb_preview.dll ${{github.workspace}}/bin/Release/tbb_preview.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb_preview_debug.dll ${{github.workspace}}/bin/Release/tbb_preview_debug.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc.dll ${{github.workspace}}/bin/Release/tbbmalloc.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc_debug.dll ${{github.workspace}}/bin/Release/tbbmalloc_debug.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc_proxy.dll ${{github.workspace}}/bin/Release/tbbmalloc_proxy.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc_proxy_debug.dll ${{github.workspace}}/bin/Release/tbbmalloc_proxy_debug.dll

          copy ${{github.workspace}}/dep/windows/lib/x64_release/libmySQL.dll ${{github.workspace}}/bin/Release/libmySQL.dll
          # copy "c:/Program Files/OpenSSL-Win64/bin/libssl-1_1-x64.dll" ${{github.workspace}}/bin/Release/libssl-1_1-x64.dll
          # copy "c:/Program Files/OpenSSL-Win64/bin/libcrypto-1_1-x64.dll" ${{github.workspace}}/bin/Release/libcrypto-1_1-x64.dll
          copy ${{github.workspace}}/dep/windows/lib/x64_release/libeay32.dll ${{github.workspace}}/bin/Release/libeay32.dll

          7z a -tzip ${{env.ARCHIVE_FILENAME}} Release
    - name: Archive this artefact
      uses: actions/upload-artifact@v4
      with:
          name: snapshot-devbuild-without-anticheat
          path: "${{github.workspace}}/bin/${{env.ARCHIVE_FILENAME}}"

    #build with anticheat and install
    - name: windows build with anticheat & install
      run: |
        mkdir buildac
        cd buildac
        cmake -D TBB_ROOT_DIR=$GITHUB_WORKSPACE/tbb -DWITH_WARNINGS=0 -DBUILD_FOR_HOST_CPU=0 -DUSE_EXTRACTORS=1 -DUSE_ANTICHEAT=1 -G "Visual Studio 16 2019" -A x64 ..
        /c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Enterprise/MSBuild/Current/Bin/MSBuild.exe "MaNGOS.sln" //p:Platform=x64 //p:Configuration=Release //m:2
      #git bash shell
      shell: bash
    - name: Create Upload File Name
      run: |
          echo "ARCHIVE_FILENAME=${{ github.event.repository.name }}-$(git rev-parse --short HEAD)-with-anticheat.zip" >> $env:GITHUB_ENV
    - name: Archive files
      run: |
          #data is in Release folder
          cd ${{github.workspace}}/bin
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb.dll ${{github.workspace}}/bin/Release/tbb.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb_debug.dll ${{github.workspace}}/bin/Release/tbb_debug.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb_preview.dll ${{github.workspace}}/bin/Release/tbb_preview.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbb_preview_debug.dll ${{github.workspace}}/bin/Release/tbb_preview_debug.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc.dll ${{github.workspace}}/bin/Release/tbbmalloc.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc_debug.dll ${{github.workspace}}/bin/Release/tbbmalloc_debug.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc_proxy.dll ${{github.workspace}}/bin/Release/tbbmalloc_proxy.dll
          copy ${{github.workspace}}/tbb/bin/intel64/vc14/tbbmalloc_proxy_debug.dll ${{github.workspace}}/bin/Release/tbbmalloc_proxy_debug.dll

          copy ${{github.workspace}}/dep/windows/lib/x64_release/libmySQL.dll ${{github.workspace}}/bin/Release/libmySQL.dll
          # copy "c:/Program Files/OpenSSL-Win64/bin/libssl-1_1-x64.dll" ${{github.workspace}}/bin/Release/libssl-1_1-x64.dll
          # copy "c:/Program Files/OpenSSL-Win64/bin/libcrypto-1_1-x64.dll" ${{github.workspace}}/bin/Release/libcrypto-1_1-x64.dll
          copy ${{github.workspace}}/dep/windows/lib/x64_release/libeay32.dll ${{github.workspace}}/bin/Release/libeay32.dll

          7z a -tzip ${{env.ARCHIVE_FILENAME}} Release
    - name: Archive this artefact
      uses: actions/upload-artifact@v4
      with:
          name: snapshot-devbuild-with-anticheat
          path: "${{github.workspace}}/bin/${{env.ARCHIVE_FILENAME}}"

    - name: Download artifact snapshot-Release
      uses: actions/download-artifact@v4
      with:
        pattern: snapshot-devbuild-*
        merge-multiple: true
        path: all_snapshots

    - name: Get current date
      id: date
      uses: Kaven-Universe/github-action-current-date-time@v1
      with:
        format: "YYYY-MM-DD"

    - name: Upload snapshot
      uses: "crowbarmaster/GH-Automatic-Releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build(${{ steps.date.outputs.time }})"
        files: all_snapshots
